// -*- Java -*- File generated by the BNF Converter (bnfc 2.9.4).

// Parser definition for use with ANTLRv4
parser grammar hardtypedParser;

options {
  tokenVocab = hardtypedLexer;
}


start_Program returns [ hardtyped.Absyn.Program result ]
  : x=program EOF
    { $result = $x.result; }
  ;
start_ListExpr returns [ hardtyped.Absyn.ListExpr result ]
  : x=listExpr EOF
    { $result = $x.result; }
  ;
start_Expr returns [ hardtyped.Absyn.Expr result ]
  : x=expr EOF
    { $result = $x.result; }
  ;

program returns [ hardtyped.Absyn.Program result ]
  : p_1_1=listExpr
    { $result = new hardtyped.Absyn.ProgramExprs($p_1_1.result); }
  ;
listExpr returns [ hardtyped.Absyn.ListExpr result ]
  :  /* empty */
    { $result = new hardtyped.Absyn.ListExpr(); }
  | p_2_1=expr
    { $result = new hardtyped.Absyn.ListExpr(); $result.addLast($p_2_1.result); }
  | p_3_1=expr Surrogate_id_SYMB_0 p_3_3=listExpr
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;
expr returns [ hardtyped.Absyn.Expr result ]
  : Surrogate_id_SYMB_15
    { $result = new hardtyped.Absyn.ConstTrue(); }
  | Surrogate_id_SYMB_7
    { $result = new hardtyped.Absyn.ConstFalse(); }
  | Surrogate_id_SYMB_9 p_3_2=expr Surrogate_id_SYMB_14 p_3_4=expr Surrogate_id_SYMB_6 p_3_6=expr
    { $result = new hardtyped.Absyn.If($p_3_2.result,$p_3_4.result,$p_3_6.result); }
  | Surrogate_id_SYMB_1
    { $result = new hardtyped.Absyn.ConstZero(); }
  | Surrogate_id_SYMB_13 p_5_2=expr
    { $result = new hardtyped.Absyn.Succ($p_5_2.result); }
  | Surrogate_id_SYMB_11 p_6_2=expr
    { $result = new hardtyped.Absyn.Pred($p_6_2.result); }
  | Surrogate_id_SYMB_10 p_7_2=expr
    { $result = new hardtyped.Absyn.IsZero($p_7_2.result); }
  | p_8_1=IDENT
    { $result = new hardtyped.Absyn.Var($p_8_1.getText()); }
  | Surrogate_id_SYMB_8 Surrogate_id_SYMB_2 p_9_3=IDENT Surrogate_id_SYMB_3 Surrogate_id_SYMB_4 Surrogate_id_SYMB_12 p_9_7=expr Surrogate_id_SYMB_5
    { $result = new hardtyped.Absyn.Abstraction($p_9_3.getText(),$p_9_7.result); }
  | p_10_1=expr p_10_2=expr
    { $result = new hardtyped.Absyn.Application($p_10_1.result,$p_10_2.result); }
  | Surrogate_id_SYMB_2 p_11_2=expr Surrogate_id_SYMB_3
    { $result = $p_11_2.result; }
  ;

