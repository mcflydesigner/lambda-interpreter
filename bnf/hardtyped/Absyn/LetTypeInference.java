// File generated by the BNF Converter (bnfc 2.9.4).

package hardtyped.Absyn;

public class LetTypeInference  extends Expr {
  public final VarDec vardec_;
  public final Type type_;
  public final Expr expr_;
  public LetTypeInference(VarDec p1, Type p2, Expr p3) { vardec_ = p1; type_ = p2; expr_ = p3; }

  public <R,A> R accept(hardtyped.Absyn.Expr.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(java.lang.Object o) {
    if (this == o) return true;
    if (o instanceof hardtyped.Absyn.LetTypeInference) {
      hardtyped.Absyn.LetTypeInference x = (hardtyped.Absyn.LetTypeInference)o;
      return this.vardec_.equals(x.vardec_) && this.type_.equals(x.type_) && this.expr_.equals(x.expr_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(37*(this.vardec_.hashCode())+this.type_.hashCode())+this.expr_.hashCode();
  }


}
