// -*- Java -*- File generated by the BNF Converter (bnfc 2.9.4).

// Parser definition for use with ANTLRv4
parser grammar hardtypedParser;

options {
  tokenVocab = hardtypedLexer;
}


start_ListExpr returns [ hardtyped.Absyn.ListExpr result ]
  : x=listExpr EOF
    { $result = $x.result; }
  ;
start_Expr returns [ hardtyped.Absyn.Expr result ]
  : x=expr EOF
    { $result = $x.result; }
  ;
start_Expr1 returns [ hardtyped.Absyn.Expr result ]
  : x=expr1 EOF
    { $result = $x.result; }
  ;
start_Expr2 returns [ hardtyped.Absyn.Expr result ]
  : x=expr2 EOF
    { $result = $x.result; }
  ;
start_Expr3 returns [ hardtyped.Absyn.Expr result ]
  : x=expr3 EOF
    { $result = $x.result; }
  ;
start_Expr4 returns [ hardtyped.Absyn.Expr result ]
  : x=expr4 EOF
    { $result = $x.result; }
  ;
start_Expr5 returns [ hardtyped.Absyn.Expr result ]
  : x=expr5 EOF
    { $result = $x.result; }
  ;
start_VarDec returns [ hardtyped.Absyn.VarDec result ]
  : x=varDec EOF
    { $result = $x.result; }
  ;
start_ExprSequence returns [ hardtyped.Absyn.ExprSequence result ]
  : x=exprSequence EOF
    { $result = $x.result; }
  ;
start_ListExprSequence returns [ hardtyped.Absyn.ListExprSequence result ]
  : x=listExprSequence EOF
    { $result = $x.result; }
  ;
start_FuncArg returns [ hardtyped.Absyn.FuncArg result ]
  : x=funcArg EOF
    { $result = $x.result; }
  ;
start_ListFuncArg returns [ hardtyped.Absyn.ListFuncArg result ]
  : x=listFuncArg EOF
    { $result = $x.result; }
  ;
start_IfExpr returns [ hardtyped.Absyn.IfExpr result ]
  : x=ifExpr EOF
    { $result = $x.result; }
  ;
start_ListIfExpr returns [ hardtyped.Absyn.ListIfExpr result ]
  : x=listIfExpr EOF
    { $result = $x.result; }
  ;
start_ElseExpr returns [ hardtyped.Absyn.ElseExpr result ]
  : x=elseExpr EOF
    { $result = $x.result; }
  ;
start_Op returns [ hardtyped.Absyn.Op result ]
  : x=op EOF
    { $result = $x.result; }
  ;
start_Op1 returns [ hardtyped.Absyn.Op result ]
  : x=op1 EOF
    { $result = $x.result; }
  ;
start_Op2 returns [ hardtyped.Absyn.Op result ]
  : x=op2 EOF
    { $result = $x.result; }
  ;
start_Op3 returns [ hardtyped.Absyn.Op result ]
  : x=op3 EOF
    { $result = $x.result; }
  ;
start_Op4 returns [ hardtyped.Absyn.Op result ]
  : x=op4 EOF
    { $result = $x.result; }
  ;
start_Op5 returns [ hardtyped.Absyn.Op result ]
  : x=op5 EOF
    { $result = $x.result; }
  ;
start_Op6 returns [ hardtyped.Absyn.Op result ]
  : x=op6 EOF
    { $result = $x.result; }
  ;
start_RecordElem returns [ hardtyped.Absyn.RecordElem result ]
  : x=recordElem EOF
    { $result = $x.result; }
  ;
start_ListRecordElem returns [ hardtyped.Absyn.ListRecordElem result ]
  : x=listRecordElem EOF
    { $result = $x.result; }
  ;
start_Type returns [ hardtyped.Absyn.Type result ]
  : x=type EOF
    { $result = $x.result; }
  ;
start_Type1 returns [ hardtyped.Absyn.Type result ]
  : x=type1 EOF
    { $result = $x.result; }
  ;
start_Type2 returns [ hardtyped.Absyn.Type result ]
  : x=type2 EOF
    { $result = $x.result; }
  ;
start_Type3 returns [ hardtyped.Absyn.Type result ]
  : x=type3 EOF
    { $result = $x.result; }
  ;
start_RecordElemType returns [ hardtyped.Absyn.RecordElemType result ]
  : x=recordElemType EOF
    { $result = $x.result; }
  ;
start_ListRecordElemType returns [ hardtyped.Absyn.ListRecordElemType result ]
  : x=listRecordElemType EOF
    { $result = $x.result; }
  ;

listExpr returns [ hardtyped.Absyn.ListExpr result ]
  : p_1_1=expr Surrogate_id_SYMB_0
    { $result = new hardtyped.Absyn.ListExpr(); $result.addLast($p_1_1.result); }
  | p_2_1=expr Surrogate_id_SYMB_0 p_2_3=listExpr
    { $result = $p_2_3.result; $result.addFirst($p_2_1.result); }
  ;
expr returns [ hardtyped.Absyn.Expr result ]
  : p_1_1=expr1
    { $result = $p_1_1.result; }
  | Surrogate_id_SYMB_3 p_2_2=STRING Surrogate_id_SYMB_31 p_2_4=IDENT
    { $result = new hardtyped.Absyn.Import($p_2_2.getText().substring(1, $p_2_2.getText().length()-1),$p_2_4.getText()); }
  | Surrogate_id_SYMB_3 p_3_2=STRING
    { $result = new hardtyped.Absyn.Import1($p_3_2.getText().substring(1, $p_3_2.getText().length()-1)); }
  | Surrogate_id_SYMB_33 p_4_2=varDec Surrogate_id_SYMB_4 p_4_4=expr1
    { $result = new hardtyped.Absyn.LetVariable($p_4_2.result,$p_4_4.result); }
  | Surrogate_id_SYMB_33 p_5_2=varDec Surrogate_id_SYMB_4 p_5_4=expr1 Surrogate_id_SYMB_32 p_5_6=expr1
    { $result = new hardtyped.Absyn.LetInference($p_5_2.result,$p_5_4.result,$p_5_6.result); }
  | Surrogate_id_SYMB_34 p_6_2=varDec Surrogate_id_SYMB_4 p_6_4=expr1
    { $result = new hardtyped.Absyn.LetRec($p_6_2.result,$p_6_4.result); }
  | Surrogate_id_SYMB_34 p_7_2=varDec Surrogate_id_SYMB_4 p_7_4=expr1 Surrogate_id_SYMB_32 p_7_6=expr1
    { $result = new hardtyped.Absyn.LetRecInference($p_7_2.result,$p_7_4.result,$p_7_6.result); }
  | Surrogate_id_SYMB_35 p_8_2=varDec Surrogate_id_SYMB_4 p_8_4=type
    { $result = new hardtyped.Absyn.LetType($p_8_2.result,$p_8_4.result); }
  | Surrogate_id_SYMB_35 p_9_2=varDec Surrogate_id_SYMB_4 p_9_4=type Surrogate_id_SYMB_32 p_9_6=expr1
    { $result = new hardtyped.Absyn.LetTypeInference($p_9_2.result,$p_9_4.result,$p_9_6.result); }
  | p_10_1=listIfExpr p_10_2=elseExpr
    { $result = new hardtyped.Absyn.IfStmt($p_10_1.result,$p_10_2.result); }
  ;
expr1 returns [ hardtyped.Absyn.Expr result ]
  : p_1_1=expr2
    { $result = $p_1_1.result; }
  | Surrogate_id_SYMB_6 p_2_2=listFuncArg Surrogate_id_SYMB_7 p_2_4=listExpr Surrogate_id_SYMB_8
    { $result = new hardtyped.Absyn.Function($p_2_2.result,$p_2_4.result); }
  | p_3_1=Print Surrogate_id_SYMB_1 p_3_3=expr Surrogate_id_SYMB_2
    { $result = new hardtyped.Absyn.PrintFunction($p_3_1.getText(),$p_3_3.result); }
  | p_4_1=ReadReal Surrogate_id_SYMB_1 p_4_3=listExprSequence Surrogate_id_SYMB_2
    { $result = new hardtyped.Absyn.ReadRealFunction($p_4_1.getText(),$p_4_3.result); }
  | p_5_1=ReadInt Surrogate_id_SYMB_1 p_5_3=listExprSequence Surrogate_id_SYMB_2
    { $result = new hardtyped.Absyn.ReadIntFunction($p_5_1.getText(),$p_5_3.result); }
  | p_6_1=ReadString Surrogate_id_SYMB_1 p_6_3=listExprSequence Surrogate_id_SYMB_2
    { $result = new hardtyped.Absyn.ReadStringFunction($p_6_1.getText(),$p_6_3.result); }
  | p_7_1=ReadBool Surrogate_id_SYMB_1 p_7_3=listExprSequence Surrogate_id_SYMB_2
    { $result = new hardtyped.Absyn.ReadBoolFunction($p_7_1.getText(),$p_7_3.result); }
  ;
expr2 returns [ hardtyped.Absyn.Expr result ]
  : p_1_1=expr3
    { $result = $p_1_1.result; }
  | Surrogate_id_SYMB_6 p_2_2=listFuncArg Surrogate_id_SYMB_7 p_2_4=listExpr Surrogate_id_SYMB_8 Surrogate_id_SYMB_1 p_2_7=listExprSequence Surrogate_id_SYMB_2
    { $result = new hardtyped.Absyn.FunctionApplication($p_2_2.result,$p_2_4.result,$p_2_7.result); }
  | Surrogate_id_SYMB_6 p_3_2=listFuncArg Surrogate_id_SYMB_7 p_3_4=listExpr Surrogate_id_SYMB_8 Surrogate_id_SYMB_9 p_3_7=type
    { $result = new hardtyped.Absyn.FunctionWithReturnType($p_3_2.result,$p_3_4.result,$p_3_7.result); }
  | p_4_1=op
    { $result = new hardtyped.Absyn.Operation($p_4_1.result); }
  ;
expr3 returns [ hardtyped.Absyn.Expr result ]
  : p_1_1=expr4
    { $result = $p_1_1.result; }
  | p_2_1=expr4 Surrogate_id_SYMB_1 p_2_3=listExprSequence Surrogate_id_SYMB_2
    { $result = new hardtyped.Absyn.Application($p_2_1.result,$p_2_3.result); }
  | p_3_1=INTEGER
    { $result = new hardtyped.Absyn.IntValue(Integer.parseInt($p_3_1.getText())); }
  | p_4_1=DOUBLE
    { $result = new hardtyped.Absyn.RealValue(Double.parseDouble($p_4_1.getText())); }
  | p_5_1=STRING
    { $result = new hardtyped.Absyn.StringValue($p_5_1.getText().substring(1, $p_5_1.getText().length()-1)); }
  | p_6_1=Bool
    { $result = new hardtyped.Absyn.BoolValue($p_6_1.getText()); }
  | p_7_1=Unit
    { $result = new hardtyped.Absyn.UnitValue($p_7_1.getText()); }
  | Surrogate_id_SYMB_7 p_8_2=listRecordElem Surrogate_id_SYMB_8
    { $result = new hardtyped.Absyn.RecordConst($p_8_2.result); }
  ;
expr4 returns [ hardtyped.Absyn.Expr result ]
  : p_1_1=expr5
    { $result = $p_1_1.result; }
  | p_2_1=IDENT
    { $result = new hardtyped.Absyn.Variable($p_2_1.getText()); }
  | p_3_1=IDENT Surrogate_id_SYMB_9 p_3_3=expr4
    { $result = new hardtyped.Absyn.ArrowExpr($p_3_1.getText(),$p_3_3.result); }
  | p_4_1=expr4 Surrogate_id_SYMB_10 p_4_3=expr4
    { $result = new hardtyped.Absyn.DotExpr($p_4_1.result,$p_4_3.result); }
  ;
expr5 returns [ hardtyped.Absyn.Expr result ]
  : Surrogate_id_SYMB_1 p_1_2=expr Surrogate_id_SYMB_2
    { $result = $p_1_2.result; }
  | Surrogate_id_SYMB_1 p_2_2=listExpr Surrogate_id_SYMB_2
    { $result = new hardtyped.Absyn.Exprs($p_2_2.result); }
  ;
varDec returns [ hardtyped.Absyn.VarDec result ]
  : p_1_1=IDENT Surrogate_id_SYMB_5 p_1_3=type
    { $result = new hardtyped.Absyn.TypedVar($p_1_1.getText(),$p_1_3.result); }
  | p_2_1=IDENT
    { $result = new hardtyped.Absyn.UntypedVar($p_2_1.getText()); }
  ;
exprSequence returns [ hardtyped.Absyn.ExprSequence result ]
  : p_1_1=expr
    { $result = new hardtyped.Absyn.Seq($p_1_1.result); }
  ;
listExprSequence returns [ hardtyped.Absyn.ListExprSequence result ]
  :  /* empty */
    { $result = new hardtyped.Absyn.ListExprSequence(); }
  | p_2_1=exprSequence
    { $result = new hardtyped.Absyn.ListExprSequence(); $result.addLast($p_2_1.result); }
  | p_3_1=exprSequence Surrogate_id_SYMB_11 p_3_3=listExprSequence
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;
funcArg returns [ hardtyped.Absyn.FuncArg result ]
  : p_1_1=IDENT Surrogate_id_SYMB_5 p_1_3=type
    { $result = new hardtyped.Absyn.Argument($p_1_1.getText(),$p_1_3.result); }
  ;
listFuncArg returns [ hardtyped.Absyn.ListFuncArg result ]
  : p_1_1=funcArg Surrogate_id_SYMB_10
    { $result = new hardtyped.Absyn.ListFuncArg(); $result.addLast($p_1_1.result); }
  | p_2_1=funcArg Surrogate_id_SYMB_10 p_2_3=listFuncArg
    { $result = $p_2_3.result; $result.addFirst($p_2_1.result); }
  ;
ifExpr returns [ hardtyped.Absyn.IfExpr result ]
  : Surrogate_id_SYMB_12 Surrogate_id_SYMB_1 p_1_3=expr2 Surrogate_id_SYMB_2 Surrogate_id_SYMB_5 p_1_6=expr
    { $result = new hardtyped.Absyn.If($p_1_3.result,$p_1_6.result); }
  ;
listIfExpr returns [ hardtyped.Absyn.ListIfExpr result ]
  :  /* empty */
    { $result = new hardtyped.Absyn.ListIfExpr(); }
  | p_2_1=listIfExpr p_2_2=ifExpr
    { $result = $p_2_1.result; $result.addLast($p_2_2.result); }
  ;
elseExpr returns [ hardtyped.Absyn.ElseExpr result ]
  : Surrogate_id_SYMB_13 p_1_2=expr
    { $result = new hardtyped.Absyn.Else($p_1_2.result); }
  ;
op returns [ hardtyped.Absyn.Op result ]
  : p_1_1=op1
    { $result = $p_1_1.result; }
  | p_2_1=expr3 Surrogate_id_SYMB_37 p_2_3=expr3
    { $result = new hardtyped.Absyn.Or($p_2_1.result,$p_2_3.result); }
  ;
op1 returns [ hardtyped.Absyn.Op result ]
  : p_1_1=op2
    { $result = $p_1_1.result; }
  | p_2_1=expr3 Surrogate_id_SYMB_30 p_2_3=expr3
    { $result = new hardtyped.Absyn.And($p_2_1.result,$p_2_3.result); }
  ;
op2 returns [ hardtyped.Absyn.Op result ]
  : p_1_1=op3
    { $result = $p_1_1.result; }
  | Surrogate_id_SYMB_36 p_2_2=expr3
    { $result = new hardtyped.Absyn.Not($p_2_2.result); }
  ;
op3 returns [ hardtyped.Absyn.Op result ]
  : p_1_1=op4
    { $result = $p_1_1.result; }
  | p_2_1=expr3 Surrogate_id_SYMB_18 p_2_3=expr3
    { $result = new hardtyped.Absyn.More($p_2_1.result,$p_2_3.result); }
  | p_3_1=expr3 Surrogate_id_SYMB_19 p_3_3=expr3
    { $result = new hardtyped.Absyn.MoreEql($p_3_1.result,$p_3_3.result); }
  | p_4_1=expr3 Surrogate_id_SYMB_20 p_4_3=expr3
    { $result = new hardtyped.Absyn.Eql($p_4_1.result,$p_4_3.result); }
  | p_5_1=expr3 Surrogate_id_SYMB_21 p_5_3=expr3
    { $result = new hardtyped.Absyn.NotEql($p_5_1.result,$p_5_3.result); }
  | p_6_1=expr3 Surrogate_id_SYMB_22 p_6_3=expr3
    { $result = new hardtyped.Absyn.LessEql($p_6_1.result,$p_6_3.result); }
  | p_7_1=expr3 Surrogate_id_SYMB_23 p_7_3=expr3
    { $result = new hardtyped.Absyn.Less($p_7_1.result,$p_7_3.result); }
  ;
op4 returns [ hardtyped.Absyn.Op result ]
  : p_1_1=op5
    { $result = $p_1_1.result; }
  | p_2_1=expr3 Surrogate_id_SYMB_14 p_2_3=expr3
    { $result = new hardtyped.Absyn.Sum($p_2_1.result,$p_2_3.result); }
  | p_3_1=expr3 Surrogate_id_SYMB_15 p_3_3=expr3
    { $result = new hardtyped.Absyn.Substract($p_3_1.result,$p_3_3.result); }
  ;
op5 returns [ hardtyped.Absyn.Op result ]
  : p_1_1=op6
    { $result = $p_1_1.result; }
  | p_2_1=expr3 Surrogate_id_SYMB_16 p_2_3=expr3
    { $result = new hardtyped.Absyn.Multiply($p_2_1.result,$p_2_3.result); }
  | p_3_1=expr3 Surrogate_id_SYMB_17 p_3_3=expr3
    { $result = new hardtyped.Absyn.Divide($p_3_1.result,$p_3_3.result); }
  ;
op6 returns [ hardtyped.Absyn.Op result ]
  : Surrogate_id_SYMB_1 p_1_2=op Surrogate_id_SYMB_2
    { $result = $p_1_2.result; }
  | Surrogate_id_SYMB_14 p_2_2=expr3
    { $result = new hardtyped.Absyn.UnaryPlus($p_2_2.result); }
  | Surrogate_id_SYMB_15 p_3_2=expr3
    { $result = new hardtyped.Absyn.UnaryMinus($p_3_2.result); }
  ;
recordElem returns [ hardtyped.Absyn.RecordElem result ]
  : p_1_1=IDENT Surrogate_id_SYMB_4 p_1_3=expr3
    { $result = new hardtyped.Absyn.Elem($p_1_1.getText(),$p_1_3.result); }
  ;
listRecordElem returns [ hardtyped.Absyn.ListRecordElem result ]
  :  /* empty */
    { $result = new hardtyped.Absyn.ListRecordElem(); }
  | p_2_1=recordElem
    { $result = new hardtyped.Absyn.ListRecordElem(); $result.addLast($p_2_1.result); }
  | p_3_1=recordElem Surrogate_id_SYMB_11 p_3_3=listRecordElem
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;
type returns [ hardtyped.Absyn.Type result ]
  : p_1_1=type1
    { $result = $p_1_1.result; }
  ;
type1 returns [ hardtyped.Absyn.Type result ]
  : p_1_1=type2
    { $result = $p_1_1.result; }
  | p_2_1=type1 Surrogate_id_SYMB_9 p_2_3=type2
    { $result = new hardtyped.Absyn.FunctionType($p_2_1.result,$p_2_3.result); }
  ;
type2 returns [ hardtyped.Absyn.Type result ]
  : p_1_1=type3
    { $result = $p_1_1.result; }
  | p_2_1=IDENT
    { $result = new hardtyped.Absyn.UserType($p_2_1.getText()); }
  | Surrogate_id_SYMB_26
    { $result = new hardtyped.Absyn.IntType(); }
  | Surrogate_id_SYMB_27
    { $result = new hardtyped.Absyn.RealType(); }
  | Surrogate_id_SYMB_25
    { $result = new hardtyped.Absyn.BoolType(); }
  | Surrogate_id_SYMB_28
    { $result = new hardtyped.Absyn.StringType(); }
  | Surrogate_id_SYMB_29
    { $result = new hardtyped.Absyn.UnitType(); }
  | Surrogate_id_SYMB_24
    { $result = new hardtyped.Absyn.AnyType(); }
  | Surrogate_id_SYMB_7 p_9_2=listRecordElemType Surrogate_id_SYMB_8
    { $result = new hardtyped.Absyn.RecordType($p_9_2.result); }
  ;
type3 returns [ hardtyped.Absyn.Type result ]
  : Surrogate_id_SYMB_1 p_1_2=type Surrogate_id_SYMB_2
    { $result = $p_1_2.result; }
  ;
recordElemType returns [ hardtyped.Absyn.RecordElemType result ]
  : p_1_1=IDENT Surrogate_id_SYMB_5 p_1_3=type
    { $result = new hardtyped.Absyn.ElemType($p_1_1.getText(),$p_1_3.result); }
  ;
listRecordElemType returns [ hardtyped.Absyn.ListRecordElemType result ]
  :  /* empty */
    { $result = new hardtyped.Absyn.ListRecordElemType(); }
  | p_2_1=recordElemType
    { $result = new hardtyped.Absyn.ListRecordElemType(); $result.addLast($p_2_1.result); }
  | p_3_1=recordElemType Surrogate_id_SYMB_11 p_3_3=listRecordElemType
    { $result = $p_3_3.result; $result.addFirst($p_3_1.result); }
  ;

