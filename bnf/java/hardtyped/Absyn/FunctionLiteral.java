// File generated by the BNF Converter (bnfc 2.9.4).

package hardtyped.Absyn;

public class FunctionLiteral  extends Literal {
  public final FunctionParameters functionparameters_;
  public final FunctionBody functionbody_;
  public FunctionLiteral(FunctionParameters p1, FunctionBody p2) { functionparameters_ = p1; functionbody_ = p2; }

  public <R,A> R accept(hardtyped.Absyn.Literal.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(java.lang.Object o) {
    if (this == o) return true;
    if (o instanceof hardtyped.Absyn.FunctionLiteral) {
      hardtyped.Absyn.FunctionLiteral x = (hardtyped.Absyn.FunctionLiteral)o;
      return this.functionparameters_.equals(x.functionparameters_) && this.functionbody_.equals(x.functionbody_);
    }
    return false;
  }

  public int hashCode() {
    return 37*(this.functionparameters_.hashCode())+this.functionbody_.hashCode();
  }


}
