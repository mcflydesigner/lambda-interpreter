comment "//" ;
comment "/*" "*/" ;

separator Expr ";";

-- Functions
Function. Expr ::= "/\\" VarDec "{" Expr "}";
ApplyFunction. Expr ::= Expr "(" Expr ")";


-- Basic operations
Sum. Expr ::= Expr "+" Expr;
Substract. Expr::= Expr "-" Expr;
Multiply. Expr ::= Expr "*" Expr;
Divide. Expr ::= Expr "/" Expr;

-- Variable initializers
Let. Expr ::= "let" VarDec "=" Expr;
LetInference. Expr ::= "let" VarDec "=" Expr "in" Expr;
LetAscription. Expr ::= "let" VarDec "=" Expr "as" Type;

-- Values
IntValue. Expr ::= Integer;
RealValue. Expr ::= Double;
StringValue. Expr ::= String;


-- Utility expressions
MultipleExpressions. Expr ::= Expr ";" Expr;
_ . Expr ::= Expr ";";
AtomicExpression. Expr ::= Ident;

-- Variable declarations
MultipleVars. VarDec ::= VarDec "." VarDec ;
MultipleVarsFinal. VarDec ::= VarDec ".";
TypedVar. VarDec ::= Ident ":" Type;
UntypedVar. VarDec ::= Ident;

-- Types
IntType. Type ::= "Integer";
RealType. Type ::= "Real";
BoolType. Type ::= "Boolean";
StringType. Type ::= "String";
UnitType. Type ::= "Unit";